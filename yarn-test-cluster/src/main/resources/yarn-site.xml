<?xml version="1.0"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->
<configuration>
   <property>
    <description>who will execute(launch) the containers.</description>
    <name>yarn.nodemanager.container-executor.class</name>
    <value>oz.hadoop.yarn.test.cluster.InJvmContainerExecutor</value>
<!--     <value>org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor</value> -->
  </property>
  <property>       
     <name>yarn.resourcemanager.resourcetracker.address</name>       
     <value>0.0.0.0:8025</value>  
     <description>Enter your ResourceManager hostname.</description>
  </property>
  <property>       
     <name>yarn.resourcemanager.scheduler.address</name>       
     <value>0.0.0.0:8035</value>  
     <description>Enter your ResourceManager hostname.</description>
  </property>
  <property>       
    <name>yarn.resourcemanager.address</name>       
    <value>0.0.0.0:8055</value>  
    <description>Enter your ResourceManager hostname.</description>
  </property>
  <property>
   <name>yarn.resourcemanager.hostname</name>
   <value>0.0.0.0</value>
    <description>The hostname of the RM.</description>
 </property>
 <property>
    <description>The http address of the RM web application.</description>
    <name>yarn.resourcemanager.webapp.address</name>
    <value>${yarn.resourcemanager.hostname}:8080</value>
  </property>
  <property>
    <name>yarn.scheduler.minimum-allocation-mb</name>
    <value>128</value>
    <description>Minimum limit of memory to allocate to each container request at the Resource Manager.</description>
  </property>
  <property>
    <name>yarn.scheduler.maximum-allocation-mb</name>
    <value>2048</value>
    <description>Maximum limit of memory to allocate to each container request at the Resource Manager.</description>
  </property>
  <property>
    <name>yarn.scheduler.minimum-allocation-vcores</name>
    <value>1</value>
    <description>The minimum allocation for every container request at the RM, in terms of virtual CPU cores. Requests lower than this won't take effect, and the specified value will get allocated the minimum.</description>
  </property>
  <property>
    <name>yarn.scheduler.maximum-allocation-vcores</name>
    <value>2</value>
    <description>The maximum allocation for every container request at the RM, in terms of virtual CPU cores. Requests higher than this won't take effect, and will get capped to this value.</description>
  </property>
  <property>
    <name>yarn.nodemanager.resource.memory-mb</name>
    <value>2048</value>
    <description>Physical memory, in MB, to be made available to running containers</description>
  </property>
  <property>
    <name>yarn.nodemanager.resource.cpu-vcores</name>
    <value>4</value>
    <description>Number of CPU cores that can be allocated for containers.</description>
  </property>
  
  <property>
  	<name>yarn.resourcemanager.container.liveness-monitor.interval-ms</name>
  	<value>1000</value>
  </property>
<!--   <property> -->
<!--   	<name>yarn.am.liveness-monitor.expiry-interval-ms</name> -->
<!--   	<value>1000</value> -->
<!--   </property> -->
</configuration>
